{
  "info": {
    "name": "IS Lab1 Backend",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "b0c4e7d8-0d9a-4b4a-a9a5-6a2d7ef0abcd"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register (localhost only)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "const ts = Date.now();",
                  "pm.environment.set('username', `user_${ts}`);",
                  "pm.environment.set('password', 'Secret123!');",
                  "pm.environment.set('email', `user_${ts}@example.com`);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status is 200', () => pm.response.code === 200);",
                  "const json = pm.response.json();",
                  "pm.expect(json).to.have.property('token');",
                  "pm.environment.set('token', json.token);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/register",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "v1", "auth", "register" ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\",\n  \"email\": \"{{email}}\"\n}"
            }
          }
        },
        {
          "name": "Login (get JWT)",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status is 200', () => pm.response.code === 200);",
                  "const json = pm.response.json();",
                  "pm.expect(json).to.have.property('token');",
                  "pm.environment.set('token', json.token);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "v1", "auth", "login" ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}"
            }
          }
        }
      ]
    },
    {
      "name": "Devices",
      "item": [
        {
          "name": "List devices (unauthorized - expect 401/403)",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status is 401 or 403', function () {",
                  "  pm.expect([401,403]).to.include(pm.response.code);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/devices",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "v1", "devices" ]
            }
          }
        },
        {
          "name": "Create device",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "const ts = Date.now();",
                  "pm.environment.set('deviceName', 'MacBook Pro');",
                  "pm.environment.set('deviceType', 'laptop');",
                  "pm.environment.set('fingerprint', `fp_${ts}`);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status is 200', () => pm.response.code === 200);",
                  "const json = pm.response.json();",
                  "pm.environment.set('deviceId', json.id);",
                  "pm.expect(json).to.have.property('fingerprint');"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/devices",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "v1", "devices" ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"deviceName\": \"{{deviceName}}\",\n  \"deviceType\": \"{{deviceType}}\",\n  \"fingerprint\": \"{{fingerprint}}\"\n}"
            }
          }
        },
        {
          "name": "List devices (authorized)",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status is 200', () => pm.response.code === 200);",
                  "pm.test('Returns array', () => Array.isArray(pm.response.json()));"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/devices",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "v1", "devices" ]
            }
          }
        },
        {
          "name": "Update device",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set('deviceName', 'MacBook Pro (Updated)');"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status is 200', () => pm.response.code === 200);",
                  "const json = pm.response.json();",
                  "pm.expect(json.deviceName).to.include('Updated');"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/devices/{{deviceId}}",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "v1", "devices", "{{deviceId}}" ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"deviceName\": \"{{deviceName}}\",\n  \"deviceType\": \"{{deviceType}}\",\n  \"fingerprint\": \"{{fingerprint}}\"\n}"
            }
          }
        },
        {
          "name": "Delete device",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status is 204', () => pm.response.code === 204);"
                ]
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/devices/{{deviceId}}",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "v1", "devices", "{{deviceId}}" ]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    { "key": "baseUrl", "value": "http://127.0.0.1:8081" }
  ]
}


